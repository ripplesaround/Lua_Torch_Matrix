---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ginne.
--- DateTime: 2020/5/8 21:17
---

local basic = require("matrixbasic")
local basic1 = require("STP")
M_n = torch.Tensor({{0,1},{1,0}})
M_c = torch.Tensor({--1222
    {1,0,0,0},
    {0,1,1,1}
})
M_d = torch.Tensor({--1112
    {1,1,1,0},
    {0,0,0,1}
})
M_i = torch.Tensor({--1211
    {1,0,1,1},
    {0,1,0,0}
})
M_e = torch.Tensor({--1221
    {1,0,0,1},
    {0,1,1,0}
})
M_m = torch.Tensor({--2112
    {0,1,1,0},
    {1,0,0,1}
})
function R_matrix(k)
    local ans = torch.zeros(k^2,k)
    for i=1,k,1 do
        ans[1+(k+1)*(i-1)][i] = 1
    end
    return ans
end
function W_matrix(m,n)
    local ans = torch.zeros(m*n,m*n)
    for i=1,m,1 do
        for j=1,n,1 do
            ans[i + (j-1)*m][n*(i-1)+j] = 1
        end
    end
    return ans
end

print(
        basic1.STP(M_d,
                basic1.STP(M_c,
                        (basic1.STP(
                                basic.Kronecker(torch.eye(2),
                                        (
                                                basic.Kronecker(torch.eye(2),M_c)
                                        )
                                ),basic1.STP(
                                        basic.Kronecker(torch.eye(2),
                                                (
                                                        basic.Kronecker(torch.eye(2),M_n)
                                                )
                                        ),
                                        basic1.STP(
                                                basic.Kronecker(torch.eye(2),W_matrix(2,2)),
                                                R_matrix(2)
                                                )
                                        )
                                    )
                        )
                )
        )
)


